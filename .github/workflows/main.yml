name: Deploy to EC2 with Docker and Ansible

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      EC2_SG_ID: ${{ secrets.EC2_SG_ID }}
      DOCKER_REGISTRY: ghcr.io
      GITHUB_REPOSITORY: ${{ github.repository }}
      GIT_SHA: ${{ github.sha }}
      ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get runner ip address
        id: ip
        uses: haythem/public-ip@v1.3
      
      - name: Whitelist runner ip address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id $EC2_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/arm64 --push -t $DOCKER_REGISTRY/$GITHUB_REPOSITORY:$GIT_SHA .

      - name: Setup SSH key
        run: |
          echo "$EC2_SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

      - name: Install Ansible
        run: |
          pip install ansible

      - name: Deploy with Ansible
        run: |
          ansible-playbook \
            -i ansible/inventory.yml \
            ansible/deploy.yml \
            -e git_sha=$GIT_SHA
        env:
          EC2_SSH_PRIVATE_KEY_FILE: ${{ github.workspace }}/private_key.pem
          GITHUB_TOKEN: ${{ github.token }}

      - name: Revoke runner ip address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id $EC2_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
